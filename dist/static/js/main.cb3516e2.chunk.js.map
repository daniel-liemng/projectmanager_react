{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","store/actions/projectActions.js","components/project/CreateProject.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","createProject","getFirestore","authorId","add","firstName","lastName","Date","catch","err","CreateProject","handleChange","e","setState","target","value","handleSubmit","preventDefault","history","push","onSubmit","htmlFor","onChange","ownProps","match","params","data","SignIn","email","password","signIn","authError","cred","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","res","doc","set","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb3516e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating primary lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'LOGIN_ERROR' }, err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        return firestore\r\n          .collection('users')\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Sign Up</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Log In</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper pink darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo left\">\r\n          Project Manager\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title blue-text\">\r\n          <h5>{project.title}</h5>\r\n        </span>\r\n        <p>\r\n          Posted By {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ProjectSummary from './ProjectSummary';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />;\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title blue-text\">\r\n            <h3>Notifications</h3>\r\n          </span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { Component } from 'react';\r\n\r\nimport ProjectList from '../project/ProjectList';\r\nimport Notifications from './Notifications';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // console.log(this.props);\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    // projects: state.project.projects\r\n\r\n    // connect to Firestore\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    // Get info from 'users' collection\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore\r\n      .collection('projects')\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT', project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { createProject } from '../../store/actions/projectActions';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"blue-text\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn primary lighten-1 z-depth-0\">\r\n              Create Project\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = props => {\r\n  // const id = props.match.params.id;\r\n  // console.log(props);\r\n  const { project, auth } = props;\r\n  // Route Guard\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title blue-text\">\r\n              <h5>{project.title}</h5>\r\n            </span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div> {moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading Project</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: 'projects' }])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"blue-text\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn primary lighten-1 z-depth-0\">Sign In</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: cred => dispatch(signIn(cred))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"blue-text\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn primary lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProject from './components/project/CreateProject';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/create\" component={CreateProject} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed'\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: '1', title: 'Help me find peach', content: 'haha hahah hahah' },\r\n    { id: '2', title: 'Collect all stars', content: 'haha hahah hahah' },\r\n    { id: '3', title: 'Hunt eggs with ninja', content: 'haha hahah hahah' },\r\n    { id: '4', title: 'Hello world', content: 'haha hahah hahah' }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: 'AIzaSyCN8n11cQVj0kxkeeUnYAdeI9iOBvNwtFI',\r\n  authDomain: 'marioplan-react-24df1.firebaseapp.com',\r\n  databaseURL: 'https://marioplan-react-24df1.firebaseio.com',\r\n  projectId: 'marioplan-react-24df1',\r\n  storageBucket: 'marioplan-react-24df1.appspot.com',\r\n  messagingSenderId: '38189206380',\r\n  appId: '1:38189206380:web:99cf5fee408e364c'\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport { getFirestore, reduxFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}